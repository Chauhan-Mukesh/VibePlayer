# SPDX-License-Identifier: GPL-3.0-or-later
# (c) 2025 Chauhan-Mukesh
#
# Docker Compose configuration for Vibe Player
# Supports both development and production environments

version: '3.8'

services:
  # Main Vibe Player application service
  vibeplayer:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PHP_VERSION=8.2
        - APP_ENV=${APP_ENV:-production}
    container_name: vibe-player
    ports:
      # Production: Apache on port 80 -> host 8000
      - "${VIBE_PORT:-8000}:80"
    environment:
      # PHP Configuration
      - PHP_MEMORY_LIMIT=${PHP_MEMORY_LIMIT:-256M}
      - PHP_MAX_EXECUTION_TIME=${PHP_MAX_EXECUTION_TIME:-300}
      - TZ=${TIMEZONE:-UTC}
      # Application settings
      - APP_ENV=${APP_ENV:-production}
      - CACHE_TTL=${CACHE_TTL:-900}
    volumes:
      # Development: Mount source code for hot reload (comment out for production)
      # - ./:/var/www/html:rw,delegated
      
      # Logs directory mapping
      - ./logs:/var/log/vibeplayer:rw
      
      # Cache persistence (optional)
      - vibeplayer-cache:/tmp/vibeplayercache
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost/?health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - vibeplayer-network
    # Security: Run as non-root user
    # user: "1000:1000"  # Uncomment for development if needed

  # Optional: Redis cache service for enhanced performance
  redis:
    image: redis:7-alpine
    container_name: vibe-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - vibeplayer-network
    # Uncomment to enable Redis caching
    profiles:
      - cache
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: vibe-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - vibeplayer
    restart: unless-stopped
    networks:
      - vibeplayer-network
    # Uncomment for production with reverse proxy
    profiles:
      - production

# Named volumes for data persistence
volumes:
  vibeplayer-cache:
    name: vibeplayer-cache
  redis-data:
    name: vibe-redis-data

# User-defined network for service communication
networks:
  vibeplayer-network:
    name: vibeplayer-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16